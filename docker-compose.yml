version: '3.2'
services:
    module-a:
      image: module-a:latest
      depends_on:
        - module-b
      build:
        context: module-a
        dockerfile: ./Dockerfile
      ports:
        - "8080:8080"

    module-b:
      image: module-b:latest
      depends_on:
        - db
      build:
        context: module-b
        dockerfile: ./Dockerfile
      ports:
        - "8083:8083"
    
    db:
      image: postgres:latest
      restart: always
      volumes:
        - ./module-b/src/test/resources/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
        - ./module-b/src/test/resources/data.sql:/docker-entrypoint-initdb.d/2-data.sql
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=P0stgr3sql
      ports:
        - "5432:5432"
    
    grafana:
      image: grafana/grafana:8.1.5
      restart: always
      depends_on:
        - prometheus
      ports:
        - "3000:3000"
      volumes:
        - ./grafana/provisioning/datasources/:/etc/grafana/provisioning/datasources/
        - ./grafana/provisioning/dashboards/:/etc/grafana/provisioning/dashboards/
        - ./grafana/data/:/var/lib/grafana/dashboards/
      environment:
        - GF_SECURITY_ADMIN_USER=admin
        - GF_SECURITY_ADMIN_PASSWORD=changeme
        - GF_USERS_ALLOW_SIGN_UP=false
          
    prometheus:
      image: prom/prometheus:v2.30.0
      restart: always
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml